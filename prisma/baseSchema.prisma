generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// ? USERS

model UserEntity {
    // ? required fields
    id              Int                      @id @default(autoincrement())
    username        String                   @unique
    password        String
    name            String
    roles           UserRoles[]
    rooms           ChatRoomEntity[]
    messages        ChatMessageEntity[]
    chatPermissions ChatPermissionsEntity[]
    // ? optional fields
    email           String?                  @unique
    // ? search
    textSearch      Unsupported("TSVECTOR")?

    @@index([textSearch])
}

enum UserRoles {
    ADMIN
    REGULAR
}

// ? CHAT ROOM

model ChatRoomEntity {
    id              Int                      @id @default(autoincrement())
    type            ChatRoomType
    members         UserEntity[]
    messages        ChatMessageEntity[]
    name            String?
    description     String?
    chatPermissions ChatPermissionsEntity[]
    // ? timestamps
    createdAt       DateTime                 @default(now())
    updatedAt       DateTime                 @updatedAt
    // ? search
    textSearch      Unsupported("TSVECTOR")?

    @@index([textSearch])
}

enum ChatRoomType {
    PRIVATE
    GROUP
}

// ? CHAT MESSAGE

model ChatMessageEntity {
    id               Int                      @id @default(autoincrement())
    content          String
    room             ChatRoomEntity           @relation(fields: [chatRoomEntityId], references: [id])
    chatRoomEntityId Int
    author           UserEntity               @relation(fields: [authorEntityId], references: [id])
    authorEntityId   Int
    // ? timestamps
    createdAt        DateTime                 @default(now())
    updatedAt        DateTime                 @updatedAt
    // ? search
    textSearch       Unsupported("TSVECTOR")?

    @@index([textSearch])
}

// ? CHAT PERMISSIONS

model ChatPermissionsEntity {
    id               Int            @id @default(autoincrement())
    user             UserEntity     @relation(fields: [userEntityId], references: [id])
    chatRoom         ChatRoomEntity @relation(fields: [chatRoomEntityId], references: [id])
    role             ChatRoles
    userEntityId     Int
    chatRoomEntityId Int
    // ? timestamps
    createdAt        DateTime       @default(now())
    updatedAt        DateTime       @updatedAt
}

enum ChatRoles {
    OWNER
    MEMBER
}
